@model BestApp.Models.CreateRouteModel

@{
    ViewBag.Title = "Create Route";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Route</h2>


<div class="row" style="margin-top:50px">
    <div class="col-md-8">
        @Html.Partial("~/Views/Shared/DefaultMap.cshtml")
    </div>

    <div class="col-md-4">

        @using (Html.BeginForm())
        {
            @Html.TextBoxFor(Model => Model.StartLatitude, new { @class = "super-hidden" })
            @Html.TextBoxFor(Model => Model.StartLongitude, new { @class = "super-hidden" })
            @Html.TextBoxFor(Model => Model.StopLatitude, new { @class = "super-hidden" })
            @Html.TextBoxFor(Model => Model.StopLongitude, new { @class = "super-hidden" })


            <div class="row" style="margin-top:50px">
                <div class="col-md-6">
                    @Html.LabelFor(Model => Model.Name)
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(Model => Model.Name)

                </div>
            </div>

            <div class="row" style="margin-top:50px">
                <div class="col-md-6">
                    @Html.LabelFor(Model => Model.PhoneNumber)
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(Model => Model.PhoneNumber)
                </div>
            </div>

            <div class="row" style="margin-top:50px">
                <div class="col-md-6">
                    @Html.LabelFor(Model => Model.Email)
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(Model => Model.Email)
                </div>
            </div>

            <div class="row" style="margin-top:50px">
                <div class="col-md-6">
                    @Html.LabelFor(Model => Model.StartHour)
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(Model => Model.StartHour)
                </div>
            </div>

            <div class="row" style="margin-top:50px">
                <div class="col-md-6">
                    @Html.LabelFor(Model => Model.FreeSeats)
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(Model => Model.FreeSeats)
                    <br /><br />
                    <input type="submit" value="Create Route!" />
                </div>
            </div>
            @Html.ValidationSummary(){ }
        }

    </div>
</div>
<script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="//www.mapquestapi.com/sdk/leaflet/v1.s/mq-map.js?key=Fmjtd%7Cluurn9ua2h%2C8w%3Do5-9wzlhy"></script>
<script src="//www.mapquestapi.com/sdk/leaflet/v1.s/mq-routing.js?key=Fmjtd%7Cluurn9ua2h%2C8w%3Do5-9wzlhy"></script>
<script type="text/javascript">


    var firstClick = false;
    var secondClick = false;
    var markerPlecare;
    var markerSosire;

    var carIcon = L.icon({
        iconUrl: 'Content/images/sedan.png',

        iconSize: [30, 38], // size of the icon
        iconAnchor: [22, 30], // point of the icon which will correspond to marker's location
        popupAnchor: [-3, -90] // point from which the popup should open relative to the iconAnchor
    });

    var buildingIcon = L.icon({
        iconUrl: 'Content/images/buildings10.png',

        iconSize: [38, 57], // size of the icon
        iconAnchor: [22, 30], // point of the icon which will correspond to marker's location
        popupAnchor: [-3, -90] // point from which the popup should open relative to the iconAnchor
    });

    $(document).ready(function () {

        var latStart, latStop, lngStart, lngStop;

        var onDragendPlecare = function (e) {
            $('#StartLatitude').val(markerPlecare._latlng.lat);
            $('#StartLongitude').val(markerPlecare._latlng.lng);

        }
        var onDragendSosire = function (e) {
            $('#StopLatitude').val(markerSosire._latlng.lat);
            $('#StopLongitude').val(markerSosire._latlng.lng);
        }

        var onClick = function (e) {
            if (!firstClick) {
                markerPlecare = L.marker([e.latlng.lat, e.latlng.lng], { draggable: true, icon: carIcon });
                markerPlecare.addTo(map).bindPopup("Punct plecare");
                markerPlecare.on('dragend', onDragendPlecare);
                firstClick = true;
                $('#StartLatitude').val(e.latlng.lat);
                $('#StartLongitude').val(e.latlng.lng);
                latStart = e.latlng.lat;
                lngStart = e.latlng.lng;

            }
            else if (!secondClick) {
                markerSosire = L.marker([e.latlng.lat, e.latlng.lng], { draggable: true, icon: buildingIcon });
                markerSosire.addTo(map).bindPopup("Punct sosire");
                markerSosire.on('dragend', onDragendSosire);
                secondClick = true;
                $('#StopLatitude').val(e.latlng.lat);
                $('#StopLongitude').val(e.latlng.lng);
                latStop = e.latlng.lat;
                lngStop = e.latlng.lng;
            }
            console.log(latStart, lngStart);


            if (firstClick == true && secondClick == true) {
                var dir;
                $(document).ready(function (e) {
                    dir = MQ.routing.directions();

                    dir.route({
                        locations: [{
                            latLng: {
                                lat: latStart,
                                lng: lngStart
                            }
                        }, {
                            latLng: {
                                lat: latStop,
                                lng: lngStop
                            }
                        }
                        ]
                    });


                    map.addLayer(MQ.routing.routeLayer({
                        directions: dir,
                        fitBounds: true
                    }));
                });
            }
        }

        map.on('click', onClick);


    });



</script>
