@model BestApp.Models.SearchRouteModel
@{
    ViewBag.Title = "Search Route";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Search Route</h2>

<div class="row" style="margin-top:50px">
    <div class="col-md-8">
        @Html.Partial("~/Views/Shared/DefaultMap.cshtml")
    </div>

    <div class="col-md-4">

        @using (Html.BeginForm())
        {
            @Html.TextBoxFor(Model => Model.StartLatitude, new { @class = "super-hidden" })
            @Html.TextBoxFor(Model => Model.StartLongitude, new { @class = "super-hidden" })
            @Html.TextBoxFor(Model => Model.StopLatitude, new { @class = "super-hidden" })
            @Html.TextBoxFor(Model => Model.StopLongitude, new { @class = "super-hidden" })


            <div class="row" style="margin-top:50px">
                <div class="col-md-6">
                    @Html.LabelFor(Model => Model.StartHour)
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(Model => Model.StartHour)
                </div>
            </div>

            <div class="row" style="margin-top:50px">
                <div class="col-md-6">
                    <input type="submit" value="Create Route!" />
                </div>
            </div>
            @Html.ValidationSummary(){ }
        }

    </div>
</div>
<script type="text/javascript">

    var firstClick = false;
    var secondClick = false;
    var markerPlecare;
    var markerSosire;

    var manIcon = L.icon({
        iconUrl: 'Content/images/man.png',

        iconSize: [30, 30], // size of the icon
        iconAnchor: [22, 30], // point of the icon which will correspond to marker's location
        popupAnchor: [-3, -90] // point from which the popup should open relative to the iconAnchor
    });

    var buildingIcon = L.icon({
        iconUrl: 'Content/images/buildings10.png',

        iconSize: [38, 57], // size of the icon
        iconAnchor: [22, 30], // point of the icon which will correspond to marker's location
        popupAnchor: [-3, -90] // point from which the popup should open relative to the iconAnchor
    });

    $(document).ready(function () {
        var onDragendPlecare = function (e) {
            $('#StartLatitude').val(markerPlecare._latlng.lat);
            $('#StartLongitude').val(markerPlecare._latlng.lng);
        }
        var onDragendSosire = function (e) {
            $('#StopLatitude').val(markerSosire._latlng.lat);
            $('#StopLongitude').val(markerSosire._latlng.lng);
        }

        var onClick = function (e) {
            if (!firstClick) {
                markerPlecare = L.marker([e.latlng.lat, e.latlng.lng], { draggable: true ,icon:manIcon});
                markerPlecare.addTo(map).bindPopup("Ia-ma, nene!");
                markerPlecare.on('dragend', onDragendPlecare);
                firstClick = true;
                $('#StartLatitude').val(e.latlng.lat);
                $('#StartLongitude').val(e.latlng.lng);
            }
            else if (!secondClick) {
                markerSosire = L.marker([e.latlng.lat, e.latlng.lng], { draggable: true, icon:buildingIcon });
                markerSosire.addTo(map).bindPopup("Punct sosire");
                markerSosire.on('dragend', onDragendSosire);
                secondClick = true;
                $('#StopLatitude').val(e.latlng.lat);
                $('#StopLongitude').val(e.latlng.lng);
            }
        }
        map.on('click', onClick);
    });

</script>


